{"version":3,"sources":["action/index.js","reducer/index.js","components/Header/TopNav/TopNav.jsx","components/Header/LeftNav/LeftNav.jsx","components/Header/Header.jsx","components/Main/Title/Title.jsx","components/Main/Home/Home.jsx","components/Main/Login/Login.jsx","components/Main/Join/Join.jsx","components/Main/Information/Information.jsx","components/Main/MemberManagement/MemberTable/MemberTable.jsx","components/Main/MemberManagement/Pagination/Pagination.jsx","components/Main/MemberManagement/MemberManagement.jsx","components/Main/Message/MessageTable/MessageTable.jsx","components/Main/Message/Pagination/Pagination.jsx","components/Main/Message/Message.jsx","components/Main/Main.jsx","components/Footer/Footer.jsx","pages/Home/Home.jsx","pages/MemberManagement/MemberManagement.jsx","pages/Login/Login.jsx","pages/Join/Join.jsx","pages/Information/Information.jsx","pages/Message/Message.jsx","pages/NotFound/NotFound.jsx","App.jsx","index.js","components/Header/TopNav/img/logo.png"],"names":["MessagePagination","pager","type","payload","RecentMessage","check","getStorage","item","JSON","parse","window","localStorage","getItem","MenuOpenCloseInit","open","UserNameSettingInit","name","MemberPaginationInit","MessagePaginationInit","RecentMessageInit","ReducersApp","combineReducers","MenuOpenClose","state","action","UserNameSetting","MemberPagination","TopNav","useEffect","checkMessage","mySwal","require","history","useHistory","dispatch","useDispatch","recentMessage","useSelector","RecentMessageCheck","setStorage","value","setItem","stringify","storageClear","route","push","axios","url","method","data","userId","then","response","catch","error","fire","icon","title","html","className","onClick","to","src","logo","alt","class","showCancelButton","result","isConfirmed","LeftNav","link","useState","id","path","menus","map","menu","Header","Title","words","text","Math","random","options","colors","enableTooltip","fontFamily","fontSizes","fontStyle","fontWeight","padding","rotations","rotationAngles","transitionDuration","Home","Login","Phone","setPhone","Password","setPassword","Checked","setChecked","useCookies","Cookies","setCookie","removeCookie","undefined","rememberId","submit","event","phone","password","maxAge","onEnterPress","key","autocomplete","placeholder","onChange","currentTarget","onKeyPress","checked","for","Join","Name","setName","Certification","setCertification","CertificationButton","setCertificationButton","CertificationProgress","setCertificationProgress","PasswordConfirm","setPasswordConfirm","phone_regExp","password_regExp","test","certification","Information","getUserInformation","changeUserInformation","readOnly","MemberTable","Member","socket","socketio","connect","Grade","setGrade","label","DefaultGrade","setDefaultGrade","State","setState","DefaultState","setDefaultState","defaultValue","isSearchable","e","memberId","grade","input","sender","message","emit","on","console","log","Pagination","Count","memberPagination","i","currentPage","contentLength","maxPage","ceil","leftSideNumber","rightSideNumber","minPage","MemberManagement","Members","setMembers","setCount","getMemberInformation","MessageTable","MessageList","nonCheck","AllChecked","messagePagination","Message","MessageLists","setMessageLists","CheckList","setCheckList","setAllChecked","getMessage","length","num","filter","number","delete_number","Main","Footer","NotFound","App","exact","render","component","store","createStore","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2fd6da81.chunk.js","sourcesContent":["export const MENU_OPEN_CLOSE = 'MENU_OPEN_CLOSE';\r\nexport const USER_NAME_SETTING = 'USER_NAME_SETTING';\r\nexport const MEMBER_PAGINATION = 'MEMBER_PAGINATION';\r\nexport const MESSAGE_PAGINATION = 'MESSAGE_PAGINATION';\r\nexport const RECENT_MESSAGE = 'RECENT_MESSAGE';\r\n\r\nexport function MenuOpenClose() {\r\n    return {\r\n        type: MENU_OPEN_CLOSE\r\n    };\r\n}\r\nexport function UserNameSetting() {\r\n    return {\r\n        type: USER_NAME_SETTING\r\n    };\r\n}\r\nexport function MemberPagination(pager) {\r\n    return {\r\n        type: MEMBER_PAGINATION,\r\n        payload: pager\r\n    };\r\n}\r\nexport function MessagePagination(pager) {\r\n    return {\r\n        type: MESSAGE_PAGINATION,\r\n        payload: pager\r\n    };\r\n}\r\nexport function RecentMessage(check) {\r\n    return {\r\n        type: RECENT_MESSAGE,\r\n        payload: check\r\n    };\r\n}","import { MENU_OPEN_CLOSE } from '../action';\r\nimport { USER_NAME_SETTING } from '../action';\r\nimport { MEMBER_PAGINATION } from '../action';\r\nimport { MESSAGE_PAGINATION } from '../action';\r\nimport { RECENT_MESSAGE } from '../action';\r\nimport { combineReducers } from 'redux';\r\n\r\n\r\nconst getStorage = (item) => { return JSON.parse(window.localStorage.getItem(item)) }\r\n\r\n\r\nlet MenuOpenCloseInit = {\r\n    open: true \r\n};\r\nconst MenuOpenClose = (state = MenuOpenCloseInit, action) => {\r\n    switch(action.type) {\r\n        case MENU_OPEN_CLOSE:\r\n            return {\r\n                ...state, open: !state.open\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nlet UserNameSettingInit = {\r\n    name: getStorage('userName')\r\n};\r\nconst UserNameSetting = (state = UserNameSettingInit, action) => {\r\n    switch(action.type) {\r\n        case USER_NAME_SETTING:\r\n            return {\r\n                ...state, name: getStorage('userName')\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nlet MemberPaginationInit = {\r\n    pager: 1\r\n};\r\nconst MemberPagination = (state = MemberPaginationInit, action) => {\r\n    switch(action.type) {\r\n        case MEMBER_PAGINATION:\r\n            return {\r\n                ...state, pager: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nlet MessagePaginationInit = {\r\n    pager: 1\r\n};\r\nconst MessagePagination = (state = MessagePaginationInit, action) => {\r\n    switch(action.type) {\r\n        case MESSAGE_PAGINATION:\r\n            return {\r\n                ...state, pager: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nlet RecentMessageInit = {\r\n    check: false\r\n};\r\nconst RecentMessage = (state = RecentMessageInit, action) => {\r\n    switch(action.type) {\r\n        case RECENT_MESSAGE:\r\n            return {\r\n                ...state, check: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst ReducersApp = combineReducers({\r\n    MenuOpenClose, UserNameSetting, MemberPagination, MessagePagination, RecentMessage\r\n});\r\n\r\n\r\nexport default ReducersApp;\r\n","// react\r\nimport React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\n// redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MenuOpenClose } from '../../../action';\r\nimport { RecentMessage } from '../../../action';\r\n\r\n// img\r\nimport logo from './img/logo.png';\r\n\r\n// css\r\nimport './TopNav.css';\r\n\r\n\r\nconst TopNav = () => {\r\n\r\n  useEffect(() => {\r\n    checkMessage();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const mySwal = require('sweetalert2');\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const menuOpenClose = () => { dispatch(MenuOpenClose());}\r\n  const recentMessage = (check) => { dispatch(RecentMessage(check)); }\r\n  const UserNameSetting = useSelector(state => state.UserNameSetting);\r\n  const RecentMessageCheck = useSelector(state => state.RecentMessage);\r\n  const getStorage = (item) => { return JSON.parse(window.localStorage.getItem(item)) }\r\n  const setStorage = (item, value) => { window.localStorage.setItem(item, JSON.stringify(value)) }\r\n  \r\n  const storageClear = (route) => {\r\n    setStorage('userId', 0);\r\n    setStorage('userName', '');\r\n    setStorage('userGrade', '');\r\n    history.push(route);\r\n  }\r\n  const checkMessage = () => {\r\n    axios({\r\n      url: '/api/check_message',\r\n      method: 'POST',\r\n      data: {\r\n        userId: getStorage('userId')\r\n      }\r\n    }).then(function (response) {\r\n      if ( response['data']['result'] === '000000' ) {\r\n        recentMessage(true);\r\n      } else if ( response['data']['result'] === '000010' ) {\r\n        recentMessage(false);\r\n      }\r\n    }).catch(function(error){\r\n      mySwal.fire({icon: 'error', title: '실패', html: '알수 없는 문제로 메세지 체크를 실패했습니다'});\r\n      storageClear('/');\r\n    });\r\n  }\r\n  const logOut = () => {\r\n    mySwal.fire({icon: 'question', title: '질문', html: '정말 로그아웃 하시겠습니까?', showCancelButton: true}).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios({\r\n          url: '/api/logout',\r\n          method: 'POST',\r\n          data: {\r\n            userId: getStorage('userId')\r\n          }\r\n        }).then(function (response) {\r\n          if ( response['data']['result'] === '000000' ) {\r\n            mySwal.fire({icon: 'success', title: '성공', html: '로그아웃이 완료되었습니다'});\r\n            storageClear('/');\r\n          } else if ( response['data']['result'] === '000300' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '세션이 만료되었습니다. 로그인 페이지로 이동합니다'});\r\n            storageClear('/Login');\r\n          } else if ( response['data']['result'] === '000301' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '관리자에 의해 로그아웃 됐습니다.<br>로그인 페이지로 이동합니다'});\r\n            storageClear('/Login');\r\n          } else if ( response['data']['result'] === '000302' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '정지 된 계정입니다. 관리자에게 문의해주세요'});\r\n            storageClear('/');\r\n          } else if ( response['data']['result'] === '000303' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '탈퇴 된 계정입니다. 관리자에게 문의해주세요'});\r\n            storageClear('/');\r\n          } else if ( response['data']['result'] === '000304' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '로그인이 필요합니다. 로그인 페이지로 이동합니다'});\r\n            storageClear('/Login');\r\n          }\r\n        }).catch(function(error){\r\n          mySwal.fire({icon: 'error', title: '실패', html: '알수 없는 문제로 로그아웃이 실패했습니다'});\r\n          storageClear('/');\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  return(\r\n    <div className='top_nav'>\r\n      <div className='left'>\r\n\r\n        <button onClick={menuOpenClose}>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </button>\r\n\r\n        <Link to='/'>\r\n          <img src={logo} alt='react' />\r\n        </Link>\r\n\r\n      </div>\r\n      \r\n        {\r\n          getStorage('userId') !== 0\r\n          ? <div className='right'>\r\n              <Link to='/Message' className='message'><i class=\"far fa-comment-dots\"></i><span className={RecentMessageCheck.check ? 'new' : ''}></span></Link>\r\n              <Link to='/Information' className='auth'>{UserNameSetting.name}</Link>\r\n              <span></span>\r\n              <span onClick={logOut}>Logout</span>\r\n            </div>\r\n          : \r\n          <div className='right'>\r\n            <Link to='/Login' className='auth'>Login</Link>\r\n            <span></span>\r\n            <Link to='/Join' className='auth'>Join</Link></div>\r\n        }\r\n        \r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default TopNav;","// react\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// css\r\nimport './LeftNav.css';\r\n\r\n\r\nconst LeftNav = ({ link }) => {\r\n\r\n  const [menus] = useState([\r\n    {id: 1, path: '/MemberManagement', name: 'Member Management', icon: 'fas fa-bezier-curve awesome-icon'}\r\n  ]);\r\n\r\n\r\n  return(\r\n    <nav className='left_nav'>\r\n      <ul>\r\n        {\r\n          menus.map((menu) => {\r\n            return <li><Link to={menu.path} className={link === menu.path && 'on'}><i className={menu.icon}></i><span>{menu.name}</span></Link></li>\r\n          })\r\n        }\r\n      </ul>\r\n    </nav>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default LeftNav;","// react\r\nimport React from 'react';\r\n\r\n// component\r\nimport TopNav from './TopNav/TopNav';\r\nimport LeftNav from './LeftNav/LeftNav';\r\n\r\n// css\r\nimport './Header.css';\r\n\r\n\r\nconst Header = ({ link }) => {\r\n\r\n  return(\r\n    <header>\r\n      <h1 className='blind'>Member Management Header</h1>\r\n      <TopNav />\r\n      <LeftNav link={link} />\r\n    </header>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Header;","// react\r\nimport React, { Fragment } from 'react';\r\n\r\n// css\r\nimport './Title.css';\r\n\r\n\r\nconst Title = ({ title }) => {\r\n\r\n  return(\r\n    <Fragment>\r\n      <p className='main_title'>{title}</p>\r\n      {title === 'MESSAGE' && <span className='main_text'>미접속 상태일 때 받은 메세지를 보관합니다.</span>}\r\n    </Fragment>\r\n  )\r\n  \r\n}\r\n\r\n\r\nexport default Title;","// react\r\nimport React from 'react'\r\nimport ReactWordcloud from 'react-wordcloud';\r\n\r\n// css\r\nimport './Home.css';\r\n\r\n\r\nconst words = [\r\n  {text: 'React', value: Math.random()*100}, {text: 'Login', value: Math.random()*100}, {text: 'Logout', value: Math.random()*100},\r\n  {text: 'Join', value: Math.random()*100}, {text: 'Information', value: Math.random()*100}, {text: 'Member Management', value: Math.random()*100},\r\n  {text: 'Python', value: Math.random()*100}, {text: 'Flask', value: Math.random()*100}, {text: 'MySQL', value: Math.random()*100},\r\n  {text: 'DB', value: Math.random()*100}, {text: 'Socket', value: Math.random()*100}, {text: 'Bcrypt', value: Math.random()*100},\r\n  {text: 'Session', value: Math.random()*100}, {text: 'Pymysql', value: Math.random()*100}, {text: 'Random', value: Math.random()*100},\r\n  {text: 'Cors', value: Math.random()*100}, {text: 'Redux', value: Math.random()*100}, {text: 'Not Found', value: Math.random()*100},\r\n  {text: 'Route', value: Math.random()*100}, {text: 'Local Storage', value: Math.random()*100}, {text: 'useSelect', value: Math.random()*100},\r\n  {text: 'useEffect', value: Math.random()*100}, {text: 'useState', value: Math.random()*100}, {text: 'Axios', value: Math.random()*100},\r\n  {text: 'useHistory', value: Math.random()*100}, {text: 'useDispatch', value: Math.random()*100}, {text: 'Wordcloud', value: Math.random()*100},\r\n  {text: 'Sweet Alert', value: Math.random()*100}, {text: 'useCookies', value: Math.random()*100}, {text: 'Pagination', value: Math.random()*100},\r\n  {text: 'React Select', value: Math.random()*100}, {text: 'Message', value: Math.random()*100}\r\n]\r\nconst options = {\r\n  colors: ['#fff', '#ccc', '#999', '#666'],\r\n  enableTooltip: false,\r\n  fontFamily: 'Noto Sans KR',\r\n  fontSizes: [10, 70],\r\n  fontStyle: 'normal',\r\n  fontWeight: 'bold',\r\n  padding: 5,\r\n  rotations: 2,\r\n  rotationAngles: false,\r\n  transitionDuration: 1000\r\n};\r\n\r\n\r\nconst Home = () => {\r\n\r\n  return(\r\n    <div className='home_wrap'>\r\n      <ReactWordcloud words={words} options={options} />\r\n    </div>\r\n  )\r\n    \r\n}\r\n\r\n\r\nexport default Home;","// react\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useCookies } from 'react-cookie';\r\n\r\n// redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { UserNameSetting } from '../../../action';\r\n\r\n// css\r\nimport './Login.css';\r\n\r\n\r\nconst Login = () => {\r\n\r\n  useEffect(() => {\r\n    if ( getStorage('userId') !== 0 ) {\r\n      mySwal.fire({icon: 'error', title: '실패', html: '올바른 접근 경로가 아닙니다'});\r\n      history.push('/');\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const mySwal = require('sweetalert2');\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const userNameSetting = () => { dispatch(UserNameSetting()); };\r\n  const getStorage = (item) => { return JSON.parse(window.localStorage.getItem(item)); };\r\n  const setStorage = (item, value) => { window.localStorage.setItem(item, JSON.stringify(value)); };\r\n  const [Phone, setPhone] = useState('');\r\n  const [Password, setPassword] = useState('');\r\n  const [Checked, setChecked] = useState(false);\r\n  const [Cookies, setCookie, removeCookie] = useCookies(['rememberId']);\r\n\r\n  useEffect(() => {\r\n    if(Cookies.rememberId !== undefined) {\r\n      setPhone(Cookies.rememberId);\r\n      setChecked(true);\r\n    }\r\n  }, [Cookies]);\r\n  \r\n  const onPhoneHandler = (event) => {\r\n    setPhone(event.currentTarget.value);\r\n  }\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  }\r\n  const onCheckedHandler = () => {\r\n    Checked ? setChecked(false) : setChecked(true);\r\n  }\r\n  const submit = (event) => {\r\n    if ( Phone === '' ) {\r\n      mySwal.fire({icon: 'error', title: '실패', html: '휴대폰 번호를 입력해주세요'});\r\n    } else if (Password === '' ) {\r\n      mySwal.fire({icon: 'error', title: '실패', html: '비밀번호를 입력해주세요'});\r\n    } else {\r\n      axios({\r\n        url: '/api/login',\r\n        method:'POST',\r\n        data:{\r\n          phone: Phone,\r\n          password: Password\r\n        }\r\n      }).then(function (response) {\r\n        if ( response['data']['result'] === '000000' ) {\r\n          Checked ? setCookie('rememberId', Phone, {maxAge: 2000}) : removeCookie('rememberId');\r\n          setStorage('userId', response['data']['userId']);\r\n          setStorage('userName', response['data']['userName']);\r\n          setStorage('userGrade', response['data']['userGrade']);\r\n          userNameSetting()\r\n          history.push('/');\r\n        } else if ( response['data']['result'] === '000010' ) { \r\n          mySwal.fire({icon: 'error', title: '실패', html: '휴대폰 번호 또는 비밀번호가 일치하지 않습니다'});\r\n          setPassword('');\r\n        } else if ( response['data']['result'] === '000303' ) {\r\n          mySwal.fire({icon: 'error', title: '실패', html: '휴대폰 번호 또는 비밀번호가 일치하지 않습니다'});\r\n          setPassword('');\r\n        } else if ( response['data']['result'] === '000302' ) {\r\n          mySwal.fire({icon: 'error', title: '실패', html: '정지 된 계정입니다. 관리자에게 문의해주세요'});\r\n          setPassword('');\r\n        }\r\n      }).catch(function(error){\r\n        mySwal.fire({icon: 'error', title: '실패', html: '알수 없는 문제로 로그인이 실패했습니다'});\r\n        history.push('/');\r\n      });\r\n    }\r\n    \r\n  }\r\n  const onEnterPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      submit();\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div className='login_wrap'>\r\n      <form method='post' autocomplete='off'>\r\n        <div>\r\n          <input type='tel' placeholder='휴대폰 번호' className='loginIp' value={Phone} onChange={onPhoneHandler} onKeyPress={onEnterPress} />\r\n          <input type='password' placeholder='비밀번호' className='loginIp' value={Password} onChange={onPasswordHandler} onKeyPress={onEnterPress} autocomplete='off' />\r\n        </div>\r\n        <input type='button' value='로그인' className='loginButton' onClick={submit}/>\r\n        <p>\r\n          <input type='checkbox' id='id_Save' onClick={onCheckedHandler} checked={Checked} /><label for='id_Save'><span>아이디 저장</span></label>\r\n        </p>\r\n        <span></span>\r\n        <Link to='/Join'>회원가입</Link>\r\n      </form> \r\n    </div>\r\n  )\r\n    \r\n}\r\n\r\n\r\nexport default Login;","// react\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\n// css\r\nimport './Join.css';\r\n\r\n\r\nconst Join = () => {\r\n\r\n  useEffect(() => {\r\n    if ( getStorage('userId') !== 0 ) {\r\n      mySwal.fire({icon: 'error', title: '실패', html: '올바른 접근 경로가 아닙니다'});\r\n      history.push('/');\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const mySwal = require('sweetalert2');\r\n  const history = useHistory();\r\n  const getStorage = (item) => { return JSON.parse(window.localStorage.getItem(item)) }\r\n  const [Phone, setPhone] = useState('');\r\n  const [Name, setName] = useState('');\r\n  const [Certification, setCertification] = useState('');\r\n  const [CertificationButton, setCertificationButton] = useState('인증번호 요청');\r\n  const [CertificationProgress, setCertificationProgress] = useState(false);\r\n  const [Password, setPassword] = useState('');\r\n  const [PasswordConfirm, setPasswordConfirm] = useState('');\r\n  const phone_regExp = /^(?:(010\\d{4})|(01[1|6|7|8|9]\\d{3,4}))(\\d{4})$/;\r\n  const password_regExp = /^[a-zA-Z0-9]{10,15}$/;\r\n\r\n  const onPhoneHandler = (event) => {\r\n    setPhone(event.currentTarget.value);\r\n  }\r\n  const onNameHandler = (event) => {\r\n    setName(event.currentTarget.value);\r\n  }\r\n  const onCertificationHandler = (event) => {\r\n    setCertification(event.currentTarget.value);\r\n  }\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  }\r\n  const onPasswordConfirmHandler = (event) => {\r\n    setPasswordConfirm(event.currentTarget.value);\r\n  }\r\n  const submit = () => {\r\n    if ( Phone === '' ) mySwal.fire({icon: 'error', title: '실패', html: '휴대폰 번호를 입력해주세요'});\r\n    else if ( !phone_regExp.test(Phone) ) {\r\n      mySwal.fire({icon: 'error', title: '실패', html: '휴대폰 번호를 정확히 입력해주세요'});\r\n      setPhone('');\r\n    }\r\n    else if ( Name === '' ) mySwal.fire({icon: 'error', title: '실패', html: '이름을 입력해주세요'});\r\n    else if ( Certification === '' ) mySwal.fire({icon: 'error', title: '실패', html: '본인인증 번호를 입력해주세요'});\r\n    else if ( Password === '' ) mySwal.fire({icon: 'error', title: '실패', html: '비밀번호를 입력해주세요'});\r\n    else if ( !password_regExp.test(Password) ) {\r\n      mySwal.fire({icon: 'error', title: '실패', html: '비밀번호를 숫자와 영문자 조합으로 10~15자리로 입력해주세요'});\r\n      setPassword('');\r\n      setPasswordConfirm('');\r\n    }\r\n    else if ( PasswordConfirm === '' ) mySwal.fire({icon: 'error', title: '실패', html: '비밀번호 확인을 입력해주세요'});\r\n    else if ( Password !== PasswordConfirm ) {\r\n      mySwal.fire({icon: 'error', title: '실패', html: '비밀번호가 일치하지 않습니다'});\r\n      setPassword('');\r\n      setPasswordConfirm('');\r\n    }\r\n    else \r\n      axios({\r\n        url: '/api/join',\r\n        method:'POST',\r\n        data:{\r\n          phone: Phone,\r\n          name: Name,\r\n          certification: Certification,\r\n          password: Password,\r\n        }\r\n      }).then(function (response) {\r\n        if ( response['data']['result'] === '000000' ) {\r\n          mySwal.fire({icon: 'success', title: '성공', html: '회원가입이 완료됐습니다. 로그인해주세요'});\r\n          history.push('/Login');\r\n        } else if ( response['data']['result'] === '000010' ) { \r\n          mySwal.fire({icon: 'error', title: '실패', html: '이미 가입 된 휴대폰 번호입니다'});\r\n          setPhone('');\r\n        } else if ( response['data']['result'] === '000020' ) { \r\n          mySwal.fire({icon: 'error', title: '실패', html: '본인 인증이 일치하지 않습니다'});\r\n          setCertification('');\r\n        }\r\n      }).catch(function(error){\r\n        mySwal.fire({icon: 'error', title: '실패', html: '알수 없는 문제로 회원가입이 실패했습니다'});\r\n        history.push('/');\r\n      });\r\n  }\r\n  const getCertification = () => {\r\n    if ( Phone === '' ) mySwal.fire({icon: 'error', title: '실패', html: '휴대폰 번호를 입력해주세요'});\r\n    else \r\n      axios({\r\n        url: '/api/join/get_certification',\r\n        method:'POST',\r\n        data:{\r\n          phone: Phone\r\n        }\r\n      }).then(function (response) {\r\n        if (!CertificationProgress) {\r\n          mySwal.fire({icon: 'success', title: '성공', html: '인증번호가 발송되었습니다. 인증번호를 입력해주세요'});\r\n          setCertificationButton('인증번호 재요청');\r\n          setCertificationProgress(true);\r\n        } else {\r\n          mySwal.fire({icon: 'success', title: '성공', html: '인증번호가 재발송되었습니다. 인증번호를 입력해주세요'});\r\n          setCertification('');\r\n        }\r\n      }).catch(function(error){\r\n        mySwal.fire({icon: 'error', title: '실패', html: '알수 없는 문제로 인증번호 발송이 실패했습니다'});\r\n        history.push('/');\r\n      });\r\n  }\r\n  const onEnterPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      submit();\r\n    }\r\n  }\r\n\r\n\r\n  return(\r\n    <div className='join_wrap'>\r\n      <form method='post' autocomplete='off'>\r\n        <div>\r\n          <div className='front'>\r\n            <p><span>휴대폰번호</span><span>*</span></p>\r\n            <input type='text' value={Phone} onChange={onPhoneHandler} onKeyPress={onEnterPress} />\r\n          </div>\r\n          <div className='end'>\r\n            <p><span>본인인증</span><span>*</span></p>\r\n            <input type='text' value={Certification} onChange={onCertificationHandler} onKeyPress={onEnterPress} />\r\n            <button type='button' onClick={getCertification} >{CertificationButton}</button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className='front'>\r\n            <p> <span>성명</span><span>*</span></p>\r\n            <input type='text' value={Name} onChange={onNameHandler} onKeyPress={onEnterPress} />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className='front'>\r\n            <p><span>비밀번호</span><span>*</span></p>\r\n            <input type='password' autocomplete='off' value={Password} onChange={onPasswordHandler} onKeyPress={onEnterPress} />\r\n          </div>\r\n          <div className='end'>\r\n            <p><span>비밀번호 확인</span><span>*</span></p>       \r\n            <input type='password' autocomplete='off' value={PasswordConfirm} onChange={onPasswordConfirmHandler} onKeyPress={onEnterPress} />\r\n          </div>\r\n        </div>\r\n        <p>\r\n          <span onClick={submit}>가입하기</span><Link to='/'>취소</Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  )\r\n    \r\n}\r\n\r\n\r\nexport default Join;","// react\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\n// redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { UserNameSetting } from '../../../action';\r\n\r\n// css\r\nimport './Information.css';\r\n\r\n\r\nconst Information = () => {\r\n\r\n  useEffect(() => {\r\n    getUserInformation();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const mySwal = require('sweetalert2');\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const userNameSetting = () => { dispatch(UserNameSetting()); };\r\n  const getStorage = (item) => { return JSON.parse(window.localStorage.getItem(item)) }\r\n  const setStorage = (item, value) => { window.localStorage.setItem(item, JSON.stringify(value)); };\r\n  const [Phone, setPhone] = useState('');\r\n  const [Name, setName] = useState('');\r\n  const [Password, setPassword] = useState('');\r\n  const [PasswordConfirm, setPasswordConfirm] = useState('');\r\n  const password_regExp = /^[a-zA-Z0-9]{10,15}$/;\r\n\r\n  const storageClear = (route) => {\r\n    setStorage('userId', 0);\r\n    setStorage('userName', '');\r\n    setStorage('userGrade', '');\r\n    history.push(route);\r\n  }\r\n  const onNameHandler = (event) => {\r\n    setName(event.currentTarget.value);\r\n  }\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  }\r\n  const onPasswordConfirmHandler = (event) => {\r\n    setPasswordConfirm(event.currentTarget.value);\r\n  }\r\n  const getUserInformation = () => {\r\n    axios({\r\n      url: '/api/get_user_information',\r\n      method:'POST',\r\n      data: {\r\n        userId: getStorage('userId')\r\n      }\r\n    }).then(function (response) {\r\n      if ( response['data']['result'] === '000000' ) {\r\n        setPhone(response['data']['userPhone']);\r\n        setName(response['data']['userName']);\r\n      } else if ( response['data']['result'] === '000300' ) {\r\n        mySwal.fire({icon: 'error', title: '실패', html: '세션이 만료되었습니다. 로그인 페이지로 이동합니다'});\r\n        storageClear('/Login');\r\n      } else if ( response['data']['result'] === '000301' ) {\r\n        mySwal.fire({icon: 'error', title: '실패', html: '관리자에 의해 로그아웃 됐습니다.<br>로그인 페이지로 이동합니다'});\r\n        storageClear('/Login');\r\n      } else if ( response['data']['result'] === '000302' ) {\r\n        mySwal.fire({icon: 'error', title: '실패', html: '정지 된 계정입니다. 관리자에게 문의해주세요'});\r\n        storageClear('/');\r\n      } else if ( response['data']['result'] === '000303' ) {\r\n        mySwal.fire({icon: 'error', title: '실패', html: '탈퇴 된 계정입니다. 관리자에게 문의해주세요'});\r\n        storageClear('/');\r\n      } else if ( response['data']['result'] === '000304' ) {\r\n        mySwal.fire({icon: 'error', title: '실패', html: '로그인이 필요합니다. 로그인 페이지로 이동합니다'});\r\n        storageClear('/Login');\r\n      }\r\n    }).catch(function(error){\r\n      mySwal.fire({icon: 'error', title: '실패', html: '알수 없는 문제로 회원정보 가져오기를 실패했습니다'});\r\n      storageClear('/');\r\n    });\r\n  }\r\n  const changeUserInformation = () => {\r\n    if (Name === '' ) mySwal.fire({icon: 'error', title: '실패', html: '이름을 입력해주세요'});\r\n    else if (Password === '' ) mySwal.fire({icon: 'error', title: '실패', html: '비밀번호를 입력해주세요'});\r\n    else if ( !password_regExp.test(Password) ) {\r\n      mySwal.fire({icon: 'error', title: '실패', html: '비밀번호를 숫자와 영문자 조합으로 10~15자리로 입력해주세요'});\r\n      setPassword('');\r\n      setPasswordConfirm('');\r\n    }\r\n    else if (PasswordConfirm === '' ) mySwal.fire({icon: 'error', title: '실패', html: '비밀번호 확인을 입력해주세요'});\r\n    else if (Password !== PasswordConfirm ) { \r\n      mySwal.fire({icon: 'error', title: '실패', html: '비밀번호가 일치하지 않습니다'});\r\n      setPassword('');\r\n      setPasswordConfirm('');\r\n    }\r\n    else \r\n      axios({\r\n        url: '/api/change_user_information',\r\n        method: 'POST',\r\n        data: {\r\n          name: Name,\r\n          password: Password,\r\n          userId: getStorage('userId')\r\n        }\r\n      }).then(function (response) {\r\n        if ( response['data']['result'] === '000000' ) {\r\n          mySwal.fire({icon: 'success', title: '성공', html: '회원정보 변경이 완료됐습니다'});\r\n          setPassword('');\r\n          setPasswordConfirm('');\r\n          setStorage('userName', Name)\r\n          userNameSetting()\r\n        } else if ( response['data']['result'] === '000300' ) {\r\n          mySwal.fire({icon: 'error', title: '실패', html: '세션이 만료되었습니다. 로그인 페이지로 이동합니다'});\r\n          storageClear('/Login');\r\n        } else if ( response['data']['result'] === '000301' ) {\r\n          mySwal.fire({icon: 'error', title: '실패', html: '관리자에 의해 로그아웃 됐습니다.<br>로그인 페이지로 이동합니다'});\r\n          storageClear('/Login');\r\n        } else if ( response['data']['result'] === '000302' ) {\r\n          mySwal.fire({icon: 'error', title: '실패', html: '정지 된 계정입니다. 관리자에게 문의해주세요'});\r\n          storageClear('/');\r\n        } else if ( response['data']['result'] === '000303' ) {\r\n          mySwal.fire({icon: 'error', title: '실패', html: '탈퇴 된 계정입니다. 관리자에게 문의해주세요'});\r\n          storageClear('/');\r\n        } else if ( response['data']['result'] === '000304' ) {\r\n          mySwal.fire({icon: 'error', title: '실패', html: '로그인이 필요합니다. 로그인 페이지로 이동합니다'});\r\n          storageClear('/Login');\r\n        }\r\n      }).catch(function(error){\r\n        mySwal.fire({icon: 'error', title: '실패', html: '알수 없는 문제로 회원정보 변경을 실패했습니다'});\r\n        storageClear('/');\r\n      });\r\n  }\r\n  const outUser = () => {\r\n    mySwal.fire({icon: 'question', title: '질문', html: '정말 회원탈퇴 하시겠습니까?', showCancelButton: true}).then((result) => {\r\n      if (result.isConfirmed) {\r\n        if (Name === '' ) mySwal.fire({icon: 'error', title: '실패', html: '이름을 입력해주세요'});\r\n        else if (Password === '' ) mySwal.fire({icon: 'error', title: '실패', html: '비밀번호를 입력해주세요'});\r\n        else if ( !password_regExp.test(Password) ) {\r\n          mySwal.fire({icon: 'error', title: '실패', html: '비밀번호를 숫자와 영문자 조합으로 10~15자리로 입력해주세요'});\r\n          setPassword('');\r\n          setPasswordConfirm('');\r\n        }\r\n        else if (PasswordConfirm === '' ) mySwal.fire({icon: 'error', title: '실패', html: '비밀번호 확인을 입력해주세요'});\r\n        else if (Password !== PasswordConfirm ) {\r\n          mySwal.fire({icon: 'error', title: '실패', html: '비밀번호가 일치하지 않습니다'});\r\n          setPassword('');\r\n          setPasswordConfirm('');\r\n        }\r\n        else \r\n          axios({\r\n            url: '/api/out_user',\r\n            method:'POST',\r\n            data:{\r\n              password: Password,\r\n              userId: getStorage('userId')\r\n            }\r\n          }).then(function (response) {\r\n            if ( response['data']['result'] === '000000' ) {\r\n              mySwal.fire({icon: 'success', title: '성공', html: '회원탈퇴가 완료되었습니다'});\r\n              storageClear('/');\r\n            } else if ( response['data']['result'] === '000010' ) {\r\n              mySwal.fire({icon: 'error', title: '실패', html: '비밀번호가 일치하지 않습니다'});\r\n              setPassword('');\r\n              setPasswordConfirm('');\r\n            } else if ( response['data']['result'] === '000300' ) {\r\n              mySwal.fire({icon: 'error', title: '실패', html: '세션이 만료되었습니다. 로그인 페이지로 이동합니다'});\r\n              storageClear('/Login');\r\n            } else if ( response['data']['result'] === '000301' ) {\r\n              mySwal.fire({icon: 'error', title: '실패', html: '관리자에 의해 로그아웃 됐습니다.<br>로그인 페이지로 이동합니다'});\r\n              storageClear('/Login');\r\n            } else if ( response['data']['result'] === '000302' ) {\r\n              mySwal.fire({icon: 'error', title: '실패', html: '정지 된 계정입니다. 관리자에게 문의해주세요'});\r\n              storageClear('/');\r\n            } else if ( response['data']['result'] === '000303' ) {\r\n              mySwal.fire({icon: 'error', title: '실패', html: '탈퇴 된 계정입니다. 관리자에게 문의해주세요'});\r\n              storageClear('/');\r\n            } else if ( response['data']['result'] === '000304' ) {\r\n              mySwal.fire({icon: 'error', title: '실패', html: '로그인이 필요합니다. 로그인 페이지로 이동합니다'});\r\n              storageClear('/Login');\r\n            }\r\n          }).catch(function(error){\r\n            mySwal.fire({icon: 'error', title: '실패', html: '알수 없는 문제로 회원탈퇴를 실패했습니다'});\r\n            storageClear('/');\r\n          });\r\n      }\r\n    })\r\n  }\r\n  const onEnterPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      changeUserInformation();\r\n    }\r\n  }\r\n  \r\n\r\n  return(\r\n    <div className='information_wrap'>\r\n      <form method='post' autocomplete='off'>\r\n        <div>\r\n          <div className='front'>\r\n            <p><span>휴대폰번호</span><span>*</span></p>\r\n            <input type='text' value={Phone} readOnly />\r\n          </div>\r\n          <div className='end'>\r\n            <p> <span>성명</span><span>*</span></p>\r\n            <input type='text' value={Name} onChange={onNameHandler} onKeyPress={onEnterPress} />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className='front'>\r\n            <p><span>비밀번호</span><span>*</span></p>\r\n            <input type='password' autocomplete='off' value={Password} onChange={onPasswordHandler} onKeyPress={onEnterPress} />\r\n          </div>\r\n          <div className='end'>\r\n            <p><span>비밀번호 확인</span><span>*</span></p>       \r\n            <input type='password' autocomplete='off' value={PasswordConfirm} onChange={onPasswordConfirmHandler} onKeyPress={onEnterPress} />\r\n          </div>\r\n        </div>\r\n        <p>\r\n          <span onClick={changeUserInformation}>변경하기</span><span onClick={outUser}>회원탈퇴</span><Link to='/'>취소</Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  )\r\n    \r\n}\r\n\r\n\r\nexport default Information;","// react\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport socketio from 'socket.io-client';\r\nimport Select from \"react-select\";\r\n\r\n// redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { UserNameSetting } from '../../../../action';\r\n\r\n\r\nconst MemberTable = ({ Member }) => {\r\n  \r\n  const mySwal = require('sweetalert2');\r\n  const socket = socketio.connect('http://18.118.50.80:5050/');\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const userNameSetting = () => { dispatch(UserNameSetting()); }\r\n  const getStorage = (item) => { return JSON.parse(window.localStorage.getItem(item)) }\r\n  const setStorage = (item, value) => { window.localStorage.setItem(item, JSON.stringify(value)) }\r\n  const [Name, setName] = useState(Member['name']);\r\n  const [Password, setPassword] = useState('');\r\n  const [PasswordConfirm, setPasswordConfirm] = useState('');\r\n  const [Grade, setGrade] = useState(Member['grade']);\r\n  const [DefaultGrade, setDefaultGrade] = useState({ value: Grade, label: Grade });\r\n  const [State, setState] = useState(Member['state']);\r\n  const [DefaultState, setDefaultState] = useState({ value: State, label: State });\r\n  const grades = [{ value: 'admin', label: 'admin' }, { value: 'guest', label: 'guest' }]\r\n  const masterGrades = [{ value: 'master', label: 'master'}]\r\n  const states = [{ value: 'J', label: 'J'}, { value: 'O', label: 'O'}, { value: 'S', label: 'S'}]\r\n  const password_regExp = /^[a-zA-Z0-9]{10,15}$/;\r\n\r\n  useEffect(() => {\r\n    setName(Member['name']);\r\n    setGrade(Member['grade']);\r\n    setState(Member['state']);\r\n    setDefaultGrade({ value: Member['grade'], label: Member['grade'] })\r\n    setDefaultState({ value: Member['state'], label: Member['state'] })\r\n  }, [Member])\r\n\r\n  const storageClear = (route) => {\r\n    setStorage('userId', 0);\r\n    setStorage('userName', '');\r\n    setStorage('userGrade', '');\r\n    history.push(route);\r\n  }\r\n  const onNameHandler = (event) => {\r\n    setName(event.currentTarget.value);\r\n  }\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  }\r\n  const onPasswordConfirmHandler = (event) => {\r\n    setPasswordConfirm(event.currentTarget.value);\r\n  }\r\n  const changeMemberInformation = () => {\r\n    mySwal.fire({icon: 'question', title: '질문', html: '회원정보를 변경하시겠습니까?', showCancelButton: true}).then((result) => {\r\n      if (result.isConfirmed) {\r\n        if (Password !== '' || PasswordConfirm !== '') {\r\n          if ( !password_regExp.test(Password) ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '비밀번호를 숫자와 영문자 조합으로 10~15자리로 입력해주세요'});\r\n            setPassword('');\r\n            setPasswordConfirm('');\r\n            return false;\r\n          }else if (Password !== PasswordConfirm ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '비밀번호가 일치하지 않습니다'});\r\n            setPassword('');\r\n            setPasswordConfirm('');\r\n            return false;\r\n          }\r\n        }\r\n        axios({\r\n          url: '/api/change_member_information',\r\n          method:'POST',\r\n          data:{\r\n            userId: getStorage('userId'),\r\n            memberId: Member['id'],\r\n            name: Name,\r\n            password: Password,\r\n            grade: Grade,\r\n            state: State\r\n          }\r\n        }).then(function (response) {\r\n          if ( response['data']['result'] === '000000' ) {\r\n            mySwal.fire({icon: 'success', title: '성공', html: '회원정보 변경이 완료됐습니다'});\r\n            setPassword('');\r\n            setPasswordConfirm('');\r\n            if ( Member['id'] === getStorage('userId') ) {\r\n              setStorage('userName', Name);\r\n              setStorage('userGrade', Grade);\r\n              userNameSetting()\r\n            }\r\n          } else if ( response['data']['result'] === '000010' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '회원정보를 수정할 수 있는 등급이 아닙니다'});\r\n            history.push('/');\r\n          } else if ( response['data']['result'] === '000020' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '마스터 계정은 정보를 수정할 수 없습니다'});\r\n            setPassword('');\r\n            setPasswordConfirm('');\r\n          } else if ( response['data']['result'] === '000300' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '세션이 만료되었습니다. 로그인 페이지로 이동합니다'});\r\n            storageClear('/Login');\r\n          } else if ( response['data']['result'] === '000301' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '관리자에 의해 로그아웃 됐습니다.<br>로그인 페이지로 이동합니다'});\r\n            storageClear('/Login');\r\n          } else if ( response['data']['result'] === '000302' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '정지 된 계정입니다. 관리자에게 문의해주세요'});\r\n            storageClear('/');\r\n          } else if ( response['data']['result'] === '000303' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '탈퇴 된 계정입니다. 관리자에게 문의해주세요'});\r\n            storageClear('/');\r\n          } else if ( response['data']['result'] === '000304' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '로그인이 필요합니다. 로그인 페이지로 이동합니다'});\r\n            storageClear('/Login');\r\n          }\r\n        }).catch(function(error){\r\n          mySwal.fire({icon: 'error', title: '실패', html: '알수 없는 문제로 회원정보 변경이 실패했습니다'});\r\n          storageClear('/');\r\n        });\r\n      }\r\n    })\r\n  }\r\n  const alarm = () => {\r\n    mySwal.fire({icon: 'question', title: '질문', html: '해당 유저에게 보낼 메세지를 입력해주세요', input: 'text', showCancelButton: true}).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios({\r\n          url: '/api/alarm',\r\n          method:'POST',\r\n          data:{\r\n            userId: getStorage('userId'),\r\n            memberId: Member['id'],\r\n            sender: getStorage('userName'),\r\n            message: result.value\r\n          }\r\n        }).then(function (response) {\r\n          if ( response['data']['result'] === '000000' ) {\r\n            socket.emit('sendMessage', {'message': result.value, 'memberId': Member['id'], 'sender': getStorage('userName')})\r\n            socket.on('confirmResult', (data) => {\r\n              if ( data.result === '000000') { mySwal.fire({icon: 'success', title: '성공', html: '메세지가 성공적으로 전송되었습니다'}); }\r\n            });\r\n          } else if ( response['data']['result'] === '000020' ) {\r\n            mySwal.fire({icon: 'success', title: '성공', html: '메세지가 성공적으로 전송되었습니다'});\r\n          } else if ( response['data']['result'] === '000010' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '메세지를 보낼 수 있는 등급이 아닙니다'});\r\n            history.push('/');\r\n          } else if ( response['data']['result'] === '000300' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '세션이 만료되었습니다. 로그인 페이지로 이동합니다'});\r\n            storageClear('/Login');\r\n          } else if ( response['data']['result'] === '000301' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '관리자에 의해 로그아웃 됐습니다.<br>로그인 페이지로 이동합니다'});\r\n            storageClear('/Login');\r\n          } else if ( response['data']['result'] === '000302' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '정지 된 계정입니다. 관리자에게 문의해주세요'});\r\n            storageClear('/');\r\n          } else if ( response['data']['result'] === '000303' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '탈퇴 된 계정입니다. 관리자에게 문의해주세요'});\r\n            storageClear('/');\r\n          } else if ( response['data']['result'] === '000304' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '로그인이 필요합니다. 로그인 페이지로 이동합니다'});\r\n            storageClear('/Login');\r\n          }\r\n        }).catch(function(error){\r\n          mySwal.fire({icon: 'error', title: '실패', html: '알수 없는 문제로 메세지 전송을 실패했습니다'});\r\n          storageClear('/');\r\n        });\r\n      }\r\n    })\r\n  }\r\n  const logOutMember = () => {\r\n    mySwal.fire({icon: 'question', title: '질문', html: '해당 유저를 로그아웃 시키시겠습니까?', showCancelButton: true}).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios({\r\n          url: '/api/logout_member',\r\n          method:'POST',\r\n          data:{\r\n            userId: getStorage('userId'),\r\n            memberId: Member['id']\r\n          }\r\n        }).then(function (response) {\r\n          console.log(response)\r\n          if ( response['data']['result'] === '000000' ) {\r\n            mySwal.fire({icon: 'success', title: '성공', html: '해당 유저가 로그아웃 되었습니다'});\r\n            if ( Member['id'] === getStorage('userId') ) {\r\n              storageClear('/');\r\n            }\r\n          } else if ( response['data']['result'] === '000010' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '계정을 로그아웃 시킬 수 있는 등급이 아닙니다'});\r\n            history.push('/');\r\n          } else if ( response['data']['result'] === '000020' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '마스터 계정은 로그아웃 시킬 수 없습니다'});\r\n          } else if ( response['data']['result'] === '000300' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '세션이 만료되었습니다. 로그인 페이지로 이동합니다'});\r\n            storageClear('/Login');\r\n          } else if ( response['data']['result'] === '000301' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '관리자에 의해 로그아웃 됐습니다.<br>로그인 페이지로 이동합니다'});\r\n            storageClear('/Login');\r\n          } else if ( response['data']['result'] === '000302' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '정지 된 계정입니다. 관리자에게 문의해주세요'});\r\n            storageClear('/');\r\n          } else if ( response['data']['result'] === '000303' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '탈퇴 된 계정입니다. 관리자에게 문의해주세요'});\r\n            storageClear('/');\r\n          } else if ( response['data']['result'] === '000304' ) {\r\n            mySwal.fire({icon: 'error', title: '실패', html: '로그인이 필요합니다. 로그인 페이지로 이동합니다'});\r\n            storageClear('/Login');\r\n          }\r\n        }).catch(function(error){\r\n          mySwal.fire({icon: 'error', title: '실패', html: '알수 없는 문제로 로그아웃이 실패했습니다'});\r\n          storageClear('/');\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  return(\r\n    <form method='post' autocomplete='off' className='tr'>\r\n      <div className='td'><input type='tel' value={Member['phone']} readOnly className='memberInput' /></div>\r\n      <div className='td'><input type='text' value={Name} onChange={onNameHandler} className='memberInput' /></div>\r\n      <div className='td'><input type='password' autocomplete='off' value={Password} onChange={onPasswordHandler} className='memberInput' /></div>\r\n      <div className='td'><input type='password' autocomplete='off' value={PasswordConfirm} onChange={onPasswordConfirmHandler} className='memberInput' /></div>\r\n      <div className='td'>\r\n        {\r\n          Member['grade'] === 'master'\r\n          ? <Select options={masterGrades} defaultValue={DefaultGrade} value={{ value: Grade, label: Grade }} isSearchable={false} onChange={(e) => setGrade(e['value'])} />\r\n          : <Select options={grades} defaultValue={DefaultGrade} value={{ value: Grade, label: Grade }} isSearchable={false} onChange={(e) => setGrade(e['value'])} />\r\n        }\r\n      </div>\r\n      <div className='td'>\r\n        <Select options={states} defaultValue={DefaultState} value={{ value: State, label: State }} isSearchable={false} onChange={(e) => setState(e['value'])} />\r\n      </div>\r\n      <div className='td'><div className='button' onClick={changeMemberInformation}>변경</div></div>\r\n      <div className='td'><div className='button' onClick={alarm}>알림</div></div>\r\n      <div className='td'><div className='button' onClick={logOutMember}>로그아웃</div></div>\r\n    </form>\r\n  )\r\n    \r\n}\r\n\r\nexport default MemberTable;","// react\r\nimport React from 'react';\r\n\r\n// redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MemberPagination } from '../../../../action';\r\n\r\n// css\r\nimport './Pagination.css';\r\n\r\n\r\nfunction Pagination({ Count }){ \r\n\r\n  const dispatch = useDispatch();\r\n  const memberPagination = (i) => { dispatch(MemberPagination(i)); }\r\n  const currentPage = useSelector(state => state.MemberPagination);\r\n\r\n  let contentLength = Count;\r\n  let minPage = 1\r\n  let maxPage = Math.ceil(contentLength/7) ;\r\n  let pager = [];\r\n  let leftSideNumber = currentPage.pager - 2;\r\n  let rightSideNumber = currentPage.pager + 2;\r\n\r\n  if ( leftSideNumber <= minPage ) { \r\n    leftSideNumber = minPage;\r\n  } else if ( rightSideNumber === maxPage ) {\r\n    leftSideNumber = maxPage - 4;\r\n  }\r\n\r\n  if ( rightSideNumber >= maxPage ) {\r\n    rightSideNumber = maxPage;\r\n  }else if ( leftSideNumber === minPage ) { \r\n    rightSideNumber = minPage + 4;\r\n  }\r\n\r\n  for (let i=leftSideNumber; i<=rightSideNumber; i++) {\r\n    pager.push(\r\n      <div className={(i === currentPage.pager ? 'active' : '')} onClick={() => { memberPagination(i) }}>{i}</div>\r\n    );\r\n  }\r\n\r\n  const prevPageClick = () => {\r\n    if ( currentPage.pager > 1 ) { memberPagination(currentPage.pager - 1) }\r\n  }\r\n  const nextPageClick = () => {\r\n    if ( currentPage.pager < maxPage ) { memberPagination(currentPage.pager + 1) }\r\n  }\r\n  const firstPageClick = () => {\r\n    memberPagination(minPage)\r\n  }\r\n  const lastPageClick = () => {\r\n    memberPagination(maxPage)\r\n  }\r\n\r\n  return (\r\n    <div className='pagination'>\r\n      <div className={(currentPage.pager === minPage ? 'disable' : '')} onClick={firstPageClick}>&lsaquo;&lsaquo;</div>\r\n      <div className={(currentPage.pager === minPage ? 'disable' : '')} onClick={prevPageClick}>&lsaquo;</div>\r\n      {pager}\r\n      <div className={(currentPage.pager === maxPage ? 'disable' : '')} onClick={nextPageClick}>&rsaquo;</div>\r\n      <div className={(currentPage.pager === maxPage ? 'disable' : '')} onClick={lastPageClick}>&rsaquo;&rsaquo;</div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Pagination;","// react\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// redux\r\nimport { useSelector } from 'react-redux';\r\n\r\n// component\r\nimport MemberTable from './MemberTable/MemberTable';\r\nimport Pagination from './Pagination/Pagination';\r\n\r\n// css\r\nimport './MemberManagement.css';\r\n\r\n\r\nconst MemberManagement = () => { \r\n\r\n  const mySwal = require('sweetalert2');\r\n  const history = useHistory();\r\n  const currentPage = useSelector(state => state.MemberPagination);\r\n  const getStorage = (item) => { return JSON.parse(window.localStorage.getItem(item)) }\r\n  const setStorage = (item, value) => { window.localStorage.setItem(item, JSON.stringify(value)) }\r\n  const [Members, setMembers] = useState([]);\r\n  const [Count, setCount] = useState(); \r\n\r\n  useEffect(() => {\r\n    getMemberInformation();\r\n  }, [currentPage.pager]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const storageClear = (route) => {\r\n    setStorage('userId', 0);\r\n    setStorage('userName', '');\r\n    setStorage('userGrade', '');\r\n    history.push(route);\r\n  }\r\n  const getMemberInformation = () => {\r\n    axios({\r\n      url: '/api/get_member_information',\r\n      method:'POST',\r\n      data:{\r\n        userId: getStorage('userId'),\r\n        pager: currentPage.pager\r\n      }\r\n    }).then(function (response) {\r\n      if ( response['data']['result'] === '000000' ) {\r\n        setMembers(response['data']['rows']);\r\n        setCount(response['data']['count']['count(*)']);\r\n      }else if ( response['data']['result'] === '000010' ) {\r\n        mySwal.fire({icon: 'error', title: '실패', html: '회원정보를 볼 수 있는 등급이 아닙니다'});\r\n        history.push('/');\r\n      } else if ( response['data']['result'] === '000300' ) {\r\n        mySwal.fire({icon: 'error', title: '실패', html: '세션이 만료되었습니다. 로그인 페이지로 이동합니다'});\r\n        storageClear('/Login');\r\n      } else if ( response['data']['result'] === '000301' ) {\r\n        mySwal.fire({icon: 'error', title: '실패', html: '관리자에 의해 로그아웃 됐습니다.<br>로그인 페이지로 이동합니다'});\r\n        storageClear('/Login');\r\n      } else if ( response['data']['result'] === '000302' ) {\r\n        mySwal.fire({icon: 'error', title: '실패', html: '정지 된 계정입니다. 관리자에게 문의해주세요'});\r\n        storageClear('/');\r\n      } else if ( response['data']['result'] === '000303' ) {\r\n        mySwal.fire({icon: 'error', title: '실패', html: '탈퇴 된 계정입니다. 관리자에게 문의해주세요'});\r\n        storageClear('/');\r\n      } else if ( response['data']['result'] === '000304' ) {\r\n        mySwal.fire({icon: 'error', title: '실패', html: '로그인이 필요합니다. 로그인 페이지로 이동합니다'});\r\n        storageClear('/Login');\r\n      }\r\n    }).catch(function(error){\r\n      mySwal.fire({icon: 'error', title: '실패', html: '알수 없는 문제로 회원정보 가져오기를 실패했습니다'});\r\n      storageClear('/');\r\n    });\r\n  }\r\n\r\n  return(\r\n    <div className='management_wrap'>\r\n      <div className='table_wrap'>\r\n        <div className='table'>\r\n          <div className='tr'>\r\n            <div className='td th'><span>휴대폰번호</span></div>\r\n            <div className='td th'><span>이름</span></div>\r\n            <div className='td th'><span>비밀번호</span></div>\r\n            <div className='td th'><span>비밀번호확인</span></div>\r\n            <div className='td th'><span>등급</span></div>\r\n            <div className='td th'><span>상태</span></div>\r\n            <div className='td th'><span>변경</span></div>\r\n            <div className='td th'><span>알림</span></div>\r\n            <div className='td th'><span>로그아웃</span></div>\r\n          </div>\r\n          { \r\n            Members.map((Member) => {\r\n              return (\r\n                <MemberTable Member={Member} />\r\n              )\r\n            })\r\n          }     \r\n        </div>\r\n        <Pagination Count={Count}/>\r\n      </div>\r\n    </div>\r\n  )\r\n    \r\n}\r\n\r\n\r\nexport default MemberManagement;","// react\r\nimport React, { useState, useEffect } from 'react'\r\n\r\n\r\nconst MessageTable = ({ MessageList, check, nonCheck, AllChecked }) => {\r\n\r\n  const [Checked, setChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setChecked(false);\r\n  }, [MessageList]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if ( AllChecked ) {\r\n      setChecked(true);\r\n      check(MessageList['id']);\r\n    } else {\r\n      setChecked(false);\r\n      nonCheck(MessageList['id']);\r\n    }\r\n  }, [AllChecked]); // eslint-disable-line react-hooks/exhaustive-deps\r\n  \r\n  const onCheckedHandler = () => {\r\n    if ( Checked === false ) {\r\n      setChecked(true);\r\n      check(MessageList['id']);\r\n    } else {\r\n      setChecked(false);\r\n      nonCheck(MessageList['id']);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <form method='post' autocomplete='off' className='tr'>\r\n      <div className='td'>\r\n        <input type='checkbox' className='checkbox' onClick={onCheckedHandler} checked={Checked} id={'check_' + MessageList['id']} />\r\n        <label for={'check_' + MessageList['id']}></label>\r\n      </div>\r\n      <div className='td'><span>{MessageList['sender']}</span></div>\r\n      <div className='td'><span>{MessageList['message']}</span></div>\r\n      <div className='td'><span>{MessageList['datetime']}</span></div>\r\n    </form>\r\n  )\r\n    \r\n}\r\n\r\nexport default MessageTable;","// react\r\nimport React from 'react';\r\n\r\n// redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MessagePagination } from '../../../../action';\r\n\r\n// css\r\nimport './Pagination.css';\r\n\r\n\r\nfunction Pagination({ Count }){ \r\n\r\n  const dispatch = useDispatch();\r\n  const messagePagination = (i) => { dispatch(MessagePagination(i)); }\r\n  const currentPage = useSelector(state => state.MessagePagination);\r\n\r\n  let contentLength = Count;\r\n  let minPage = 1\r\n  let maxPage = Math.ceil(contentLength/7) ;\r\n  let pager = [];\r\n  let leftSideNumber = currentPage.pager - 2;\r\n  let rightSideNumber = currentPage.pager + 2;\r\n\r\n  if ( leftSideNumber <= minPage ) { \r\n    leftSideNumber = minPage;\r\n  } else if ( rightSideNumber === maxPage ) {\r\n    leftSideNumber = maxPage - 4;\r\n  }\r\n\r\n  if ( rightSideNumber >= maxPage ) {\r\n    rightSideNumber = maxPage;\r\n  }else if ( leftSideNumber === minPage ) { \r\n    rightSideNumber = minPage + 4;\r\n  }\r\n\r\n  for (let i=leftSideNumber; i<=rightSideNumber; i++) {\r\n    pager.push(\r\n      <div className={(i === currentPage.pager ? 'active' : '')} onClick={() => { messagePagination(i) }}>{i}</div>\r\n    );\r\n  }\r\n\r\n  const prevPageClick = () => {\r\n    if ( currentPage.pager > 1 ) { messagePagination(currentPage.pager - 1) }\r\n  }\r\n  const nextPageClick = () => {\r\n    if ( currentPage.pager < maxPage ) { messagePagination(currentPage.pager + 1) }\r\n  }\r\n  const firstPageClick = () => {\r\n    messagePagination(minPage)\r\n  }\r\n  const lastPageClick = () => {\r\n    messagePagination(maxPage)\r\n  }\r\n\r\n  return (\r\n    <div className='pagination'>\r\n      <div className={(currentPage.pager === minPage ? 'disable' : '')} onClick={firstPageClick}>&lsaquo;&lsaquo;</div>\r\n      <div className={(currentPage.pager === minPage ? 'disable' : '')} onClick={prevPageClick}>&lsaquo;</div>\r\n      {pager}\r\n      <div className={(currentPage.pager === maxPage ? 'disable' : '')} onClick={nextPageClick}>&rsaquo;</div>\r\n      <div className={(currentPage.pager === maxPage ? 'disable' : '')} onClick={lastPageClick}>&rsaquo;&rsaquo;</div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Pagination;","// react\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RecentMessage } from '../../../action';\r\nimport { MessagePagination } from '../../../action';\r\n\r\n// component\r\nimport MessageTable from './MessageTable/MessageTable';\r\nimport Pagination from './Pagination/Pagination';\r\n\r\n// css\r\nimport './Message.css';\r\n\r\n\r\nconst Message = () => { \r\n\r\n  const mySwal = require('sweetalert2');\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const recentMessage = (check) => { dispatch(RecentMessage(check)); }\r\n  const messagePagination = (i) => { dispatch(MessagePagination(i)); }\r\n  const currentPage = useSelector(state => state.MessagePagination);\r\n  const getStorage = (item) => { return JSON.parse(window.localStorage.getItem(item)) }\r\n  const setStorage = (item, value) => { window.localStorage.setItem(item, JSON.stringify(value)) }\r\n  const [MessageLists, setMessageLists] = useState([]);\r\n  const [Count, setCount] = useState();\r\n  const [CheckList, setCheckList] = useState([]);\r\n  const [AllChecked, setAllChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getMessage();\r\n    setAllChecked(false);\r\n    setCheckList([]);\r\n  }, [currentPage.pager]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if ( MessageLists.length === 0 && currentPage.pager !== 1 ) { messagePagination(currentPage.pager - 1);}\r\n    setAllChecked(false);\r\n  }, [MessageLists]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const check = (num) => {\r\n    setCheckList(CheckList => [...CheckList, num]);\r\n  }\r\n  const nonCheck = (num) => {\r\n    setCheckList(CheckList => CheckList.filter(number => number !== num));\r\n  }\r\n  const onAllCheckedHandler = () => {\r\n    AllChecked === false ? setAllChecked(true) : setAllChecked(false);\r\n  }\r\n  const storageClear = (route) => {\r\n    setStorage('userId', 0);\r\n    setStorage('userName', '');\r\n    setStorage('userGrade', '');\r\n    history.push(route);\r\n  }\r\n  const getMessage = () => {\r\n    axios({\r\n      url: '/api/get_message',\r\n      method:'POST',\r\n      data:{\r\n        userId: getStorage('userId'),\r\n        pager: currentPage.pager\r\n      }\r\n    }).then(function (response) {\r\n      if ( response['data']['result'] === '000000' ) {\r\n        setMessageLists(response['data']['rows']);\r\n        setCount(response['data']['count']['count(*)']);\r\n        recentMessage(false);\r\n      } else if ( response['data']['result'] === '000300' ) {\r\n        mySwal.fire({icon: 'error', title: '실패', html: '세션이 만료되었습니다. 로그인 페이지로 이동합니다'});\r\n        storageClear('/Login');\r\n      } else if ( response['data']['result'] === '000301' ) {\r\n        mySwal.fire({icon: 'error', title: '실패', html: '관리자에 의해 로그아웃 됐습니다.<br>로그인 페이지로 이동합니다'});\r\n        storageClear('/Login');\r\n      } else if ( response['data']['result'] === '000302' ) {\r\n        mySwal.fire({icon: 'error', title: '실패', html: '정지 된 계정입니다. 관리자에게 문의해주세요'});\r\n        storageClear('/');\r\n      } else if ( response['data']['result'] === '000303' ) {\r\n        mySwal.fire({icon: 'error', title: '실패', html: '탈퇴 된 계정입니다. 관리자에게 문의해주세요'});\r\n        storageClear('/');\r\n      } else if ( response['data']['result'] === '000304' ) {\r\n        mySwal.fire({icon: 'error', title: '실패', html: '로그인이 필요합니다. 로그인 페이지로 이동합니다'});\r\n        storageClear('/Login');\r\n      }\r\n    }).catch(function(error){\r\n      mySwal.fire({icon: 'error', title: '실패', html: '알수 없는 문제로 메세지 가져오기를 실패했습니다'});\r\n      storageClear('/');\r\n    });\r\n  }\r\n  const deleteMessage = () => {\r\n    mySwal.fire({icon: 'question', title: '질문', html: '선택한 메세지를 삭제하시겠습니까?', showCancelButton: true}).then((result) => {\r\n      if (result.isConfirmed) {\r\n        if ( CheckList.length === 0 ) {\r\n          mySwal.fire({icon: 'error', title: '실패', html: '메세지를 선택해주세요'});\r\n        } else {\r\n          axios({\r\n            url: '/api/delete_message',\r\n            method: 'POST',\r\n            data: {\r\n              userId: getStorage('userId'),\r\n              delete_number : CheckList\r\n            }\r\n          }).then(function (response) {\r\n            if ( response['data']['result'] === '000000' ) {\r\n              mySwal.fire({icon: 'success', title: '성공', html: '선택한 메세지가 삭제되었습니다'}).then((result) => {\r\n                getMessage();\r\n                setCheckList([]);\r\n              });\r\n            } else if ( response['data']['result'] === '000300' ) {\r\n              mySwal.fire({icon: 'error', title: '실패', html: '세션이 만료되었습니다. 로그인 페이지로 이동합니다'});\r\n              storageClear('/Login');\r\n            } else if ( response['data']['result'] === '000301' ) {\r\n              mySwal.fire({icon: 'error', title: '실패', html: '관리자에 의해 로그아웃 됐습니다.<br>로그인 페이지로 이동합니다'});\r\n              storageClear('/Login');\r\n            } else if ( response['data']['result'] === '000302' ) {\r\n              mySwal.fire({icon: 'error', title: '실패', html: '정지 된 계정입니다. 관리자에게 문의해주세요'});\r\n              storageClear('/');\r\n            } else if ( response['data']['result'] === '000303' ) {\r\n              mySwal.fire({icon: 'error', title: '실패', html: '탈퇴 된 계정입니다. 관리자에게 문의해주세요'});\r\n              storageClear('/');\r\n            } else if ( response['data']['result'] === '000304' ) {\r\n              mySwal.fire({icon: 'error', title: '실패', html: '로그인이 필요합니다. 로그인 페이지로 이동합니다'});\r\n              storageClear('/Login');\r\n            }\r\n          }).catch(function(error){\r\n            mySwal.fire({icon: 'error', title: '실패', html: '알수 없는 문제로 메세지 삭제가 실패했습니다'});\r\n            storageClear('/');\r\n          });\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  return(\r\n    <div className='message_wrap'>\r\n      <div className='table_wrap'>\r\n        <div className='table'>\r\n          <div className='tr'>\r\n            <div className='td th'>\r\n              <input type='checkbox' className='checkbox' onClick={onAllCheckedHandler} checked={AllChecked} />\r\n              <label></label>\r\n            </div>\r\n            <div className='td th'><span>보낸 사람</span></div>\r\n            <div className='td th'><span>내용</span></div>\r\n            <div className='td th'><span>보낸 시간</span></div>\r\n          </div>\r\n            {\r\n              Count === 0\r\n                ? <div className='nonData'>메세지가 존재하지 않습니다</div> \r\n                : MessageLists.map((MessageList) => { \r\n                  return ( <MessageTable MessageList={MessageList} Count={Count} check={check} nonCheck={nonCheck} AllChecked={AllChecked}/> ) \r\n                })\r\n            }     \r\n        </div>\r\n        <div className='button_wrap'>\r\n          <button onClick={deleteMessage}>삭제</button>\r\n        </div>\r\n          {\r\n            Count !== 0 && <Pagination Count={Count}/>\r\n          }\r\n      </div>\r\n    </div>\r\n  )\r\n    \r\n}\r\n\r\n\r\nexport default Message;","// react\r\nimport React from 'react';\r\nimport socketio from 'socket.io-client';\r\n\r\n// component\r\nimport Title from './Title/Title';\r\nimport Home from './Home/Home';\r\nimport Login from './Login/Login';\r\nimport Join from './Join/Join';\r\nimport Information from './Information/Information';\r\nimport MemberManagement from './MemberManagement/MemberManagement';\r\nimport Message from './Message/Message';\r\n\r\n// css\r\nimport './Main.css';\r\n\r\n\r\nconst Main = ({title, name}) => {\r\n\r\n  const mySwal = require('sweetalert2');\r\n  const socket = socketio.connect('http://18.118.50.80:5050/');\r\n  const getStorage = (item) => { return JSON.parse(window.localStorage.getItem(item)); };\r\n\r\n  socket.on('receiveMessage', (data) => {\r\n    if (data.memberId === getStorage('userId')) {\r\n      mySwal.fire({icon: 'success', title: data.sender, html: data.message}).then((result) => {\r\n        socket.emit('confirmResult', {'result': '000000'})\r\n      });\r\n    }\r\n  });\r\n\r\n  return(\r\n    <div className='main'>\r\n      <main>\r\n        <h1 className='blind'>Member Management Main</h1>\r\n        <div className='content'>\r\n          {name !== 'home' && <Title title={title} />}\r\n          {name === 'home' && <Home />}\r\n          {name === 'login' && <Login />}\r\n          {name === 'join' && <Join />}\r\n          {name === 'information' && <Information />}\r\n          {name === 'member management' && <MemberManagement />}\r\n          {name === 'message' && <Message />}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Main;","// react\r\nimport React from 'react';\r\n\r\n// css\r\nimport './Footer.css';\r\n\r\n\r\nconst Footer = () => {\r\n\r\n  return(\r\n    <footer>\r\n      <h1 className=\"blind\">Member Management Footer</h1>\r\n      <p>&copy; 2021. REACT EXAMPLE all rights reserved.</p>\r\n    </footer>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Footer;","// react\r\nimport React from 'react';\r\n\r\n// component\r\nimport Header from '../../components/Header/Header';\r\nimport Main from '../../components/Main/Main';\r\nimport Footer from '../../components/Footer/Footer';\r\n\r\n\r\nconst Home = ({ title, name, link }) => {\r\n\r\n  return(\r\n    <div className={name}>\r\n      <Header link={link} />\r\n      <Main title={title} name={name} />\r\n      <Footer />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Home;","// react\r\nimport React from 'react';\r\n\r\n// component\r\nimport Header from '../../components/Header/Header';\r\nimport Main from '../../components/Main/Main';\r\nimport Footer from '../../components/Footer/Footer';\r\n\r\n\r\nconst MemberManagement = ({ title, name, link }) => {\r\n\r\n  return(\r\n    <div className={name}>\r\n      <Header link={link} />\r\n      <Main title={title} name={name} />\r\n      <Footer />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default MemberManagement;","// react\r\nimport React from 'react';\r\n\r\n// component\r\nimport Header from '../../components/Header/Header';\r\nimport Main from '../../components/Main/Main';\r\nimport Footer from '../../components/Footer/Footer';\r\n\r\n\r\nconst Login = ({ title, name, link }) => {\r\n\r\n  return(\r\n    <div className={name}>\r\n      <Header link={link} />\r\n      <Main title={title} name={name} />\r\n      <Footer />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Login;","// react\r\nimport React from 'react';\r\n\r\n// component\r\nimport Header from '../../components/Header/Header';\r\nimport Main from '../../components/Main/Main';\r\nimport Footer from '../../components/Footer/Footer';\r\n\r\n\r\nconst Join = ({ title, name, link }) => {\r\n\r\n  return(\r\n    <div className={name}>\r\n      <Header link={link} />\r\n      <Main title={title} name={name} />\r\n      <Footer />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Join;","// react\r\nimport React from 'react';\r\n\r\n// component\r\nimport Header from '../../components/Header/Header';\r\nimport Main from '../../components/Main/Main';\r\nimport Footer from '../../components/Footer/Footer';\r\n\r\n\r\nconst Information = ({ title, name, link }) => {\r\n\r\n  return(\r\n    <div className={name}>\r\n      <Header link={link} />\r\n      <Main title={title} name={name} />\r\n      <Footer />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Information;","// react\r\nimport React from 'react';\r\n\r\n// component\r\nimport Header from '../../components/Header/Header';\r\nimport Main from '../../components/Main/Main';\r\nimport Footer from '../../components/Footer/Footer';\r\n\r\n\r\nconst Message = ({ title, name, link }) => {\r\n\r\n  return(\r\n    <div className={name}>\r\n      <Header link={link} />\r\n      <Main title={title} name={name} />\r\n      <Footer />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Message;","// react\r\nimport React from 'react';\r\n\r\n// css\r\nimport './NotFound.css';\r\n\r\n\r\nconst NotFound = () => {\r\n\r\n  return(\r\n    <div class='not_found_wrap'><div class='fof'><h1>Error 404</h1></div>\r\n</div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default NotFound;","// react\r\nimport React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\n// redux\r\nimport { useSelector } from 'react-redux';\r\n\r\n// page\r\nimport Home from './pages/Home/Home';\r\nimport MemberManagement from './pages/MemberManagement/MemberManagement';\r\nimport Login from './pages/Login/Login';\r\nimport Join from './pages/Join/Join';\r\nimport Information from './pages/Information/Information';\r\nimport Message from './pages/Message/Message';\r\nimport NotFound from './pages/NotFound/NotFound';\r\n\r\n// css\r\nimport './css/reset.css';\r\nimport './css/class.css';\r\n\r\n\r\nconst App = () => {\r\n\r\n  const MenuOpenClose = useSelector(state => state.MenuOpenClose);\r\n  const getStorage = (item) => { return JSON.parse(window.localStorage.getItem(item)) }\r\n  const setStorage = (item, value) => { window.localStorage.setItem(item, JSON.stringify(value)) }\r\n\r\n  if ( getStorage('userId') === null ) {\r\n    setStorage('userId', 0);\r\n    setStorage('userName', '');\r\n    setStorage('userGrade', '');\r\n  } \r\n  \r\n  return(\r\n    <div className={MenuOpenClose.open ? 'react_app open' : 'react_app close_'}>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path='/' exact={true} render={() => <Home title='Home' name='home' link='/' />} />\r\n          <Route path='/MemberManagement' exact={true} render={() => <MemberManagement title='Member Management' name='member management' link='/MemberManagement' />} />\r\n          <Route path='/Login' exact={true} render={() => <Login title='LOGIN' name='login' link='/Login' />} />\r\n          <Route path='/Join' exact={true} render={() => <Join title='JOIN' name='join' link='/Join' />} />\r\n          <Route path='/Information' exact={true} render={() => <Information title='INFORMATION' name='information' link='/Information' />} />\r\n          <Route path='/Message' exact={true} render={() => <Message title='MESSAGE' name='message' link='/Message' />} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default App;","// react\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider  } from 'react-redux';\r\nimport ReducersApp from './reducer';\r\n\r\n// component\r\nimport App from './App';\r\n\r\n// js\r\nimport '@fortawesome/fontawesome-free/js/all.js';\r\n\r\n\r\nconst store = createStore(ReducersApp);\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.4ade5cac.png\";"],"sourceRoot":""}